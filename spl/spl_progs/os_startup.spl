//module 7
loadi(54,67);
loadi(55,68);

//idle code
loadi(69,11);
loadi(70,12);

//(user area page number) * 512 -1 
// 82 * 512 - 1
SP = [PROCESS_TABLE + 11] * 512 - 1;

call BOOT_MODULE;

//idle process

PTBR = PAGE_TABLE_BASE;  //as PID of idle process is 0
PTLR = 10;

//Library
[PTBR+0] = -1;
[PTBR+1] = "0000";
[PTBR+2] = -1;
[PTBR+3] = "0000";

//Heap
[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

//Code
[PTBR+8] = 69;
[PTBR+9] = "0100";
[PTBR+10] = 70;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 81;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";

//process id
[PROCESS_TABLE + 1] = 0;

//status
[PROCESS_TABLE + 4] = RUNNING;

//user area page
[PROCESS_TABLE + 11] = 82;

//UPTR
[PROCESS_TABLE + 13] = 8*512;

//KPTR
[PROCESS_TABLE + 12] = 0;

//PTBR, PTLR
[PROCESS_TABLE + 14] = PAGE_TABLE_BASE;
[PROCESS_TABLE + 15] = 10;

[SYSTEM_STATUS_TABLE + 1] = 0;
PTBR = PAGE_TABLE_BASE;
PTLR = 10;

//set entry point in user stack
[81 * 512] = [69*512 + 1];
SP = 8*512;

ireturn;

