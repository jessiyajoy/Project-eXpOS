alias currentPID R0;
currentPID = [SYSTEM_STATUS_TABLE + 1];

multipush(BP);

// Get Process Table for curr and Save KPTR, PTBR, PTLR
alias process_table_entry R1;
process_table_entry = PROCESS_TABLE + currentPID * 16;

[process_table_entry + 12] = SP % 512;
[process_table_entry + 14] = PTBR;
[process_table_entry + 15] = PTLR;

// find newPID (Round Robin)
alias newPID R2;
newPID = currentPID + 1;
alias count R3;
count = 1;
while((count <= 16) && ([PROCESS_TABLE + (newPID*16) + 4] != READY) && ([PROCESS_TABLE + (newPID*16) + 4] != CREATED)) do
	newPID = ((newPID + 1)%16);
	count = count + 1;
endwhile;

if(count == 17) then
	newPID = 0;
endif;

alias new_process_table R3;
new_process_table = PROCESS_TABLE + newPID*16;

SP = [new_process_table + 11] * 512 + [new_process_table + 12];
PTBR = [new_process_table + 14];
PTLR = [new_process_table + 15];

[SYSTEM_STATUS_TABLE + 1] = newPID;

if([new_process_table + 4] == CREATED) then
    SP = [new_process_table + 13];
    [new_process_table + 4] = RUNNING;
    [new_process_table + 9] = 0;
    ireturn;
endif;

[new_process_table + 4] = RUNNING;
multipop(BP);
return;
