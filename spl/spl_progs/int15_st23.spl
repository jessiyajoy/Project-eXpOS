
// MODE
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 15;

alias userSP R5;
userSP = SP;

//--Switch Stack
//save user SP, set SP to KPTR
[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13] = SP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11] * 512 - 1;

//int15 to be invoked only from shell process of root user
// current process is not shell (PID in the process table != 1) or 
// current user is not root user (USERID in the process table != 1)

if( [PROCESS_TABLE +16*[SYSTEM_STATUS_TABLE+1] + 1]!= 1|| [PROCESS_TABLE +16*[SYSTEM_STATUS_TABLE+1] + 3]!=1 ) then
    [([PTBR + 2*((userSP-1)/512)]*512) + ((userSP-1)%512)] = -1;
    //switch stack, mode
    SP = [PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13]; 
    [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 0;
    ireturn;
    
endif;

// commit changes made in memory copies of disk ds to disk
// inode table (& user table)
R1 = 1;
R2 = [SYSTEM_STATUS_TABLE+1];
R3 = 59;
R4 = 3;
call DEVICE_MANAGER;
R1 = 1;
R2 = [SYSTEM_STATUS_TABLE+1];
R3 = 60;
R4 = 4;
call DEVICE_MANAGER;

// root file
R1 = 1;
R2 = [SYSTEM_STATUS_TABLE+1];
R3 = 62;
R4 = 5;
call DEVICE_MANAGER;

// disk free list
R1 = 1;
R2 = [SYSTEM_STATUS_TABLE+1];
R3 = 61;
R4 = 2;
call DEVICE_MANAGER;

halt;
